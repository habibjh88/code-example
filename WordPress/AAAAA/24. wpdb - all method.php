
### Query Methods
1. $wpdb->query( $query )
   - Executes a general SQL query.
   - Returns the number of rows affected.

2. $wpdb->get_var( $query, $column_offset = 0 )
   - Retrieves a single variable from the database.
   - Useful for queries that return a single value.

3. $wpdb->get_row( $query, $output_type = OBJECT, $row_offset = 0 )
   - Retrieves a single row from the database.
   - `output_type` can be `OBJECT`, `ARRAY_A`, or `ARRAY_N`.

4. $wpdb->get_col( $query, $column_offset = 0 )
   - Retrieves a single column from the database.
   - Returns an array of values.

5. $wpdb->get_results( $query, $output_type = OBJECT )
   - Retrieves multiple rows from the database.
   - `output_type` can be `OBJECT`, `ARRAY_A`, or `ARRAY_N`.

### Insert Methods
6. $wpdb->insert( $table, $data, $format = null )
   - Inserts a row into a table.
   - `$data` is an associative array of `column => value`.
   - `$format` is an array of formats for each value (e.g., `'%s'`, `'%d'`).

7. $wpdb->replace( $table, $data, $format = null )
   - Similar to `insert`, but replaces an existing row if it exists.

### Update Methods
8. $wpdb->update( $table, $data, $where, $format = null, $where_format = null )
   - Updates rows in a table.
   - `$where` specifies the conditions to match the rows to update.

### Delete Methods
9. $wpdb->delete( $table, $where, $where_format = null )
   - Deletes rows from a table.
   - `$where` specifies the conditions to match the rows to delete.

### Transaction Methods
10. $wpdb->query( 'START TRANSACTION' )
    - Starts a new transaction.

11. $wpdb->query( 'COMMIT' )
    - Commits the current transaction.

12. $wpdb->query( 'ROLLBACK' )
    - Rolls back the current transaction.

### Escaping Methods
13. $wpdb->prepare( $query, ...$args )
    - Prepares a SQL query with safe values.

14. $wpdb->esc_like( $string )
    - Escapes special characters for a SQL `LIKE` query.

15. $wpdb->esc_sql( $data )
    - Escapes data to be used in an SQL query.

### Utility Methods
16. $wpdb->insert_id
    - Retrieves the ID generated by the last `INSERT` operation.

17. $wpdb->num_rows
    - Retrieves the number of rows returned by the last query.

18. $wpdb->last_query
    - Retrieves the last executed SQL query.

19. $wpdb->last_error
    - Retrieves the last error encountered.

20. $wpdb->tables( $scope = 'all', $prefix = true, $blog_id = 0 )
    - Retrieves a list of table names for the specified scope (e.g., `'all'`, `'blog'`, `'global'`).

### Database Schema Methods
21. $wpdb->show_errors()
    - Enables showing database errors.

22. $wpdb->hide_errors()
    - Disables showing database errors.

23. $wpdb->print_error()
    - Prints the last database error.

24. $wpdb->has_cap( $capability )
    - Checks if the database server has a specific capability.

These methods provide a wide range of functionality for interacting with the WordPress database in a secure and efficient manner.


//All together: 
1. $wpdb->query( $query )
2. $wpdb->get_var( $query, $column_offset = 0 )
3. $wpdb->get_row( $query, $output_type = OBJECT, $row_offset = 0 )
4. $wpdb->get_col( $query, $column_offset = 0 )
5. $wpdb->get_results( $query, $output_type = OBJECT )
6. $wpdb->insert( $table, $data, $format = null )
7. $wpdb->replace( $table, $data, $format = null )
8. $wpdb->update( $table, $data, $where, $format = null, $where_format = null )
9. $wpdb->delete( $table, $where, $where_format = null )
10. $wpdb->query( 'START TRANSACTION' )
11. $wpdb->query( 'COMMIT' )
12. $wpdb->query( 'ROLLBACK' )
13. $wpdb->prepare( $query, ...$args )
14. $wpdb->esc_like( $string )
15. $wpdb->esc_sql( $data )
16. $wpdb->insert_id
17. $wpdb->num_rows
18. $wpdb->last_query
19. $wpdb->last_error
20. $wpdb->tables( $scope = 'all', $prefix = true, $blog_id = 0 )
21. $wpdb->show_errors()
22. $wpdb->hide_errors()
23. $wpdb->print_error()
24. $wpdb->has_cap( $capability )